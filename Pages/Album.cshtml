@page
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@model Aimidge.Pages.AlbumModel
@{
    ViewData["Title"] = "Album";
}

<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8">
    <link rel="stylesheet" href="~/css/generator.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/sidebar.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/album.css" asp-append-version="true">
    <link rel='stylesheet' href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css'>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true">
</head>

<body>
    <footer class="footer">
        <div>
            &copy; 2024 - Aimidge - <a asp-area="" asp-page="/AboutInside">@localizer["about"]</a>
        </div>
    </footer>
    <div class="sidebar">
        <div class="logo-details">
            <img src="~/Logo1white.png" alt="Description of the image" width="50" height="50">
            <div class="logo_name">AIMIDGE</div>
            <i class='bx bx-menu' id="btn"></i>
        </div>
        <ul class="nav-list">
            <li>
                <a asp-area="" asp-page="/Generator">
                    <i class='bx bx-grid-alt'></i>
                    <span class=" links_name">@localizer["generator"]</span>
                </a>
            </li>
            <li>
                <a asp-area="" asp-page="/Album">
                    <i class='bx bx-heart'></i>
                    <span class="links_name">@localizer["saved"]</span>
                </a>
            </li>
            <li class="profile" id="profileID">
                <div class="profile-details">
                    <img class="profile2" src="~/default.png">
                    <div class="name_job">
                        <div class="name">
                            <a asp-area="" id="sidebarUsername" asp-page="/UserProfile" class="name"></a>
                        </div>
                    </div>
                </div>
                <i class='bx bx-log-out' id="log_out"></i>
            </li>
        </ul>
    </div>
    </section>
    <script>
        const imageUrl = localStorage.getItem('selectedAvatar');
        if (imageUrl) {
            const profileImage = document.querySelector('.profile2');
            profileImage.src = imageUrl;
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", async function getUserInfo() {
            try {
                const response = await fetch('api/accounts/GetInfo', {
                    method: 'GET'
                });

                if (response.ok) {
                    const result = await response.json();;
                    if (result) {
                        document.getElementById("sidebarUsername").innerText = result.Username;
                    }
                } else {
                    console.error("Failed to fetch user information: ", response.status);
                    document.getElementById("profileID").style.display = "none";
                }
            } catch (error) {
                document.getElementById("sidebarUsername").innerText = " ";
                document.getElementById("profileID").style.display = "none";
            }
        });

        let sidebar = document.querySelector(".sidebar");
        let closeBtn = document.querySelector("#btn");
        let searchBtn = document.querySelector(".bx-search");
        let logoutBtn = document.querySelector("#log_out");
        logoutBtn.addEventListener("click", async () => {
            try {
                const response = await fetch('/api/accounts/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                if (response.ok) {
                    window.location.href = '/Index';
                } else {
                    console.error('Failed to logout:', response.statusText);
                }
            } catch (error) {
                console.error('Error during logout:', error);
            }
        });
        closeBtn.addEventListener("click", () => {
            sidebar.classList.toggle("open");
            menuBtnChange();
        });
        searchBtn.addEventListener("click", () => {
            sidebar.classList.toggle("open");
            menuBtnChange();
        });
        function menuBtnChange() {
            if (sidebar.classList.contains("open")) {
                closeBtn.classList.replace("bx-menu", "bx-menu-alt-right");
            } else {
                closeBtn.classList.replace("bx-menu-alt-right", "bx-menu");
            }
        }
    </script>
    <section class="home-section">
        <div class="try-it">
            <div class="model-card">
                <div class="model-card-container">
                    <div class="model-card-col">
                        <span class="title">@localizer["saved_images_album"]</span>
                        <div id="generatedPicturesContainer"></div>
                    </div>
                </div>
            </div>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const generatedPicturesContainer = document.getElementById('generatedPicturesContainer');

                    generatedPicturesContainer.addEventListener('mouseover', function (event) {
                        const target = event.target;
                        if (target.tagName === 'IMG' && !target.hasAttribute('data-download-added')) {

                            const downloadIcon = createDownloadIcon(target);
                            const trashIcon = createTrashIcon('bx bx-x', target);

                            target.parentElement.style.position = 'relative';
                            target.parentElement.appendChild(downloadIcon);
                            target.parentElement.appendChild(trashIcon);

                            target.setAttribute('data-download-added', 'true');

                            target.style.borderColor = '#1b6ec2';
                            target.addEventListener('mouseover', function () {
                                downloadIcon.style.opacity = '1';
                                trashIcon.style.opacity = '1';
                                target.style.borderColor = '#1b6ec2';
                            });
                            downloadIcon.addEventListener('mouseover', function () {
                                downloadIcon.style.opacity = '1';
                                trashIcon.style.opacity = '1';
                                target.style.borderColor = '#1b6ec2';
                            });
                            trashIcon.addEventListener('mouseover', function () {
                                downloadIcon.style.opacity = '1';
                                trashIcon.style.opacity = '1';
                                target.style.borderColor = '#1b6ec2';
                            });
                            downloadIcon.addEventListener('mouseout', function () {
                                target.style.borderColor = 'transparent';
                            });
                            target.addEventListener('mouseout', function () {
                                downloadIcon.style.opacity = '0';
                                trashIcon.style.opacity = '0';
                                target.style.borderColor = 'transparent';
                            });
                        }
                    });
                });
                function createTrashIcon(iconClass, imageElement) {
                    const icon = document.createElement('i');
                    icon.className = iconClass;
                    icon.style.position = 'absolute';
                    icon.style.top = '50%';
                    icon.style.transform = 'translate(-40%, -40%)';
                    icon.style.color = 'white';
                    icon.style.fontSize = '24px';
                    icon.style.cursor = 'pointer';
                    icon.style.opacity = '1';

                    const imageRect = imageElement.getBoundingClientRect();
                    const containerRect = imageElement.parentElement.getBoundingClientRect();
                    const containerScrollTop = imageElement.parentElement.scrollTop;
                    const containerScrollLeft = imageElement.parentElement.scrollLeft;

                    const offsetX = imageRect.left - containerRect.left + containerScrollLeft;
                    const offsetY = imageRect.top - containerRect.top + containerScrollTop;

                    icon.style.top = `${offsetY - 70 + imageRect.height / 2}px`;
                    icon.style.left = `${offsetX + 70 + imageRect.width / 2}px`;

                    const imageName = imageElement.getAttribute('data-image-name');

                    icon.addEventListener('click', function (e) {
                        e.stopPropagation();
                        removeImage(imageName);
                    });
                    return icon;
                }

                function createDownloadIcon(imageElement) {

                    const downloadIcon = document.createElement('i');
                    downloadIcon.className = 'bx bxs-download';
                    downloadIcon.style.position = 'absolute';
                    downloadIcon.style.top = '50%';
                    downloadIcon.style.left = '50%';
                    downloadIcon.style.transform = 'translate(-50%, -50%)';
                    downloadIcon.style.color = 'white';
                    downloadIcon.style.fontSize = '24px';
                    downloadIcon.style.cursor = 'pointer';
                    downloadIcon.style.opacity = '1';

                    const imageRect = imageElement.getBoundingClientRect();
                    const containerRect = imageElement.parentElement.getBoundingClientRect();
                    const containerScrollTop = imageElement.parentElement.scrollTop;
                    const containerScrollLeft = imageElement.parentElement.scrollLeft;

                    const offsetX = imageRect.left - containerRect.left + containerScrollLeft;
                    const offsetY = imageRect.top - containerRect.top + containerScrollTop;

                    downloadIcon.style.top = `${offsetY + imageRect.height / 2}px`;
                    downloadIcon.style.left = `${offsetX + imageRect.width / 2}px`;

                    downloadIcon.addEventListener('click', function (e) {
                        e.stopPropagation();
                        downloadImage(imageElement);
                    });

                    return downloadIcon;
                }

                function downloadImage(imageElement) {
                    var canvas = document.createElement("canvas");
                    var ctx = canvas.getContext("2d");

                    canvas.width = imageElement.naturalWidth;
                    canvas.height = imageElement.naturalHeight;

                    ctx.drawImage(imageElement, 0, 0);

                    var anchor = document.createElement("a");
                    anchor.href = canvas.toDataURL("image/jpeg");
                    anchor.download = "Image.jpg";
                    anchor.click();
                }

                async function removeImage(imageElement) {
                    const response = await fetch('Album?handler=RemoveImg', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(imageElement)
                    }).then(async resp => {
                        if(resp.ok){
                            const generatedPicturesContainer = document.getElementById('generatedPicturesContainer');
                            generatedPicturesContainer.innerHTML = '';
                            await getGalleryCountAndDisplayImages();
                        }
                    })
                }

                async function fetchAndDisplayImage(imgName) {
                    try {
                        const response = await fetch(`/Album?handler=GetGallery&imgName=${imgName}`);

                        if (response.ok) {
                            const data = await response.json();
                            const container = document.getElementById('generatedPicturesContainer');
                            const img = document.createElement('img');
                            img.setAttribute('data-image-name', imgName);
                            img.src = 'data:image/jpg;base64,' + data.image;
                            img.style.margin = '20px';
                            img.width = 180;
                            img.height = 180;
                            container.appendChild(img);
                        } else {
                            console.error('Failed to fetch image:', response.statusText);
                        }
                    } catch (error) {
                        console.error('Error fetching image:', error);
                    }
                }

                async function getGalleryCountAndDisplayImages() {
                    try {
                        const namesResponse = await fetch(`/Album?handler=GetGalleryNames`);
                        if (namesResponse.ok) {
                            const imageNames = await namesResponse.json();
                            for (let imageName of imageNames) {
                                await fetchAndDisplayImage(imageName);
                            }
                        } else {
                            console.error('Failed to fetch image names:', namesResponse.statusText);
                        }
                    } catch (error) {
                        console.error('Error fetching image names:', error);
                    }
                }

                getGalleryCountAndDisplayImages();
            </script>
            <script src="~/lib/jquery/dist/jquery.min.js"></script>
            <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
            <script src="~/js/site.js" asp-append-version="true"></script>
        </div>
    </section>
</body>
</html>