@page
@model Aimidge.Pages.AboutInsideModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@{
    ViewData["Title"] = @localizer["about"];
}
<h1>@ViewData["Title"]</h1>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="~/css/about.css" asp-append-version="true" asp-append-version="true" />
<script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>
<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true" />

<body>
    <footer class="footer">
        <div>
            &copy; 2024 - Aimidge - <a asp-area="" asp-page="/AboutInside">About</a>
        </div>
    </footer>
    <div class="sidebar">
        <div class="logo-details">
            <img src="~/Logo1white.png" alt="Description of the image" width="50" height="50">
            <div class="logo_name">AIMIDGE</div>
            <i class='bx bx-menu' id="btn"></i>
        </div>
        <ul class="nav-list">
            <li>
                <a asp-area="" asp-page="/Generator">
                    <i class='bx bx-grid-alt'></i>
                    <span class=" links_name">@localizer["Generator"]</span>
                </a>
            </li>
            <li>
                <a asp-area="" asp-page="/Album">
                    <i class='bx bx-heart'></i>
                    <span class="links_name">Saved</span>
                </a>
            </li>
            <li class="profile" id="profileID">
                <div class="profile-details">
                    <img class="profile2" src="~/default.png">
                    <div class="name_job">
                        <div class="name">
                            <a asp-area="" asp-page="/UserProfile" class="name"></a>
                        </div>
                    </div>
                </div>
                <i class='bx bx-log-out' id="log_out"></i>
            </li>
        </ul>
    </div>
    <script>
        const imageUrl = localStorage.getItem('selectedAvatar');
        if (imageUrl) {
            const profileImage = document.querySelector('.profile2');
            profileImage.src = imageUrl;
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", async function getUserInfo() {
            try {
                const response = await fetch('api/accounts/GetInfo', {
                    method: 'GET'
                });

                if (response.ok) {
                    const result = await response.json();;
                    if (result) {
                        document.getElementById("sidebarUsername").innerText = result.Username;
                    }
                } else {
                    console.error("Failed to fetch user information: ", response.status);
                    document.getElementById("profileID").style.display = "none";
                }
            } catch (error) {
                document.getElementById("sidebarUsername").innerText = " ";
                document.getElementById("profileID").style.display = "none";
            }
        });

        let sidebar = document.querySelector(".sidebar");
        let closeBtn = document.querySelector("#btn");
        let searchBtn = document.querySelector(".bx-search");
        let logoutBtn = document.querySelector("#log_out");
        logoutBtn.addEventListener("click", async () => {
            try {
                const response = await fetch('/api/accounts/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                if (response.ok) {
                    window.location.href = '/Index';
                } else {
                    console.error('Failed to logout:', response.statusText);
                }
            } catch (error) {
                console.error('Error during logout:', error);
            }
        });
        closeBtn.addEventListener("click", () => {
            sidebar.classList.toggle("open");
            menuBtnChange();
        });
        searchBtn.addEventListener("click", () => {
            sidebar.classList.toggle("open");
            menuBtnChange();
        });
        function menuBtnChange() {
            if (sidebar.classList.contains("open")) {
                closeBtn.classList.replace("bx-menu", "bx-menu-alt-right");
            } else {
                closeBtn.classList.replace("bx-menu-alt-right", "bx-menu");
            }
        }
    </script>
    </br>
    <p>@localizer["siteAuthors"]</p>
    <ul>
        <li>Tomas Petrauskas</li>
        <li>Domas Gladkauskas</li>
        <li>Aurelija Vaitkutė</li>
        <li>Tomas Kundrotas</li>
    </ul>
</body>