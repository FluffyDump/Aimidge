@page
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@model Aimidge.Pages.ProfileModel
@{
    ViewData["Title"] = "Profile";
}

<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8">
    <link rel="stylesheet" href="~/css/profile.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/sidebar.css" asp-append-version="true">
    <link rel='stylesheet' href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css'>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true">
</head>

<body>
    <div class="sidebar">
        <div class="logo-details">
            <img src="~/Logo1white.png" alt="Description of the image" width="50" height="50">
            <div class="logo_name">AIMIDGE</div>
            <i class='bx bx-menu' id="btn"></i>
        </div>
        <ul class="nav-list">
            <li>
                <a asp-area="" asp-page="/Generator">
                    <i class='bx bx-grid-alt'></i>
                    <span class=" links_name">@localizer["generator"]</span>
                </a>
            </li>
            <li>
                <a asp-area="" asp-page="/Album">
                    <i class='bx bx-heart'></i>
                    <span class="links_name">@localizer["saved"]</span>
                </a>
            </li>
            <li class="profile">
                <div class="profile-details">
                    <img class="profile2" src="~/default.png">
                    <div class="name_job">
                        <div class="name">
                            <a asp-area="" id="sidebarUsername" asp-page="/UserProfile" class="name"></a>
                        </div>
                    </div>
                </div>
                <i class='bx bx-log-out' id="log_out"></i>
            </li>
        </ul>
    </div>

    <script>
        let usernameInput;
        let nameInput;
        let emailInput;

        document.addEventListener("DOMContentLoaded", async function getUserInfo() {
            document.getElementById("usernameInput").value = "Loading...";
            document.getElementById("nameInput").value = "Loading...";
            document.getElementById("emailInput").value = "Loading...";

            try {
                const response = await fetch('api/accounts/GetInfo', {
                    method: 'GET'
                });

                if (response.ok) {
                    const result = await response.json();;
                    if (result) {
                        document.getElementById("usernameInput").value = result.Username;
                        document.getElementById("nameInput").value = result.Name;
                        document.getElementById("emailInput").value = result.Email;
                        document.getElementById("sidebarUsername").innerText = result.Username;

                        localStorage.setItem('usernameOld', result.Username);
                        localStorage.setItem('nameOld', result.Name);
                        localStorage.setItem('emailOld', result.Email);
                    }
                } else {
                    console.error("Failed to fetch user information: ", response.status);
                }
            } catch (error) {
                document.getElementById("usernameInput").value = " ";
                document.getElementById("nameInput").value = " ";
                document.getElementById("emailInput").value = " ";
                document.getElementById("sidebarUsername").innerText = " ";
            }
        });
    </script>

    <section class="home-section">
        <div class="try-it">
            <div class="model-card">
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label">@localizer["username"]</label>
                        <input type="text" id="usernameInput" class="form-control mb-1">
                    </div>
                    <div class="form-group">
                        <label class="form-label">@localizer["name"]</label>
                        <input type="text" id="nameInput" class="form-control">
                    </div>
                    <div class="form-group">
                        <label class="form-label">@localizer["e-mail"]</label>
                        <input type="text" id=emailInput class="form-control mb-1">
                    </div>
                    <button id="submitInfo" type="button" class="buttons">@localizer["submit"]</button>
                    <div id="updateMessage" style="font-size:20px;"></div>
                    <br>
                    <br>
                    <div class="icons">
                        <div class="avatars">
                            <img class="profile-image1" src="~/avatar1.png" width="200px" height="200px"
                                style="margin-bottom:20px;">
                        </div>
                        <div class="form-group">
                            <select id="avatarSelect" size="5" class="profile-picture" onchange='getPicture(this)'>
                                <option value="/avatar1.png">Avatar 1</option>
                                <option value="/avatar2.png">Avatar 2</option>
                                <option value="/avatar3.png">Avatar 3</option>
                                <option value="/avatar4.png">Avatar 4</option>
                                <option value="/avatar5.png">Avatar 5</option>
                                <option value="/avatar6.png">Avatar 6</option>
                                <option value="/avatar7.png">Avatar 7</option>
                                <option value="/avatar8.png">Avatar 8</option>
                                <option value="/avatar9.png">Avatar 9</option>
                                <option value="/avatar10.png">Avatar 10</option>
                                <option value="/avatar11.png">Avatar 11</option>
                                <option value="/avatar12.png">Avatar 12</option>
                                <option value="/avatar13.png">Avatar 13</option>
                                <option value="/avatar14.png">Avatar 14</option>
                                <option value="/avatar15.png">Avatar 15</option>
                                <option value="/avatar16.png">Avatar 16</option>
                                <option value="/avatar17.png">Avatar 17</option>
                                <option value="/avatar18.png">Avatar 18</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
            <script type="text/javascript"></script>
        </div>
    </section>
    <script>
        const imageUrl = localStorage.getItem('selectedAvatar');
        if (imageUrl) {
            const profileImage = document.querySelector('.profile2');
            profileImage.src = imageUrl;
        }
    </script>
    <script>
        function isValidName(name) {
            return name.length >= 3;
        }
        function isValidEmail(email) {
            const regex = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return regex.test(email);
        }
        function isValidUsername(username) {
            return username.length >= 4;
        }

        document.getElementById('submitInfo').addEventListener('click', async function (event) {
            event.preventDefault();
            const formData = {
                Username: document.getElementById('usernameInput').value,
                Name: document.getElementById('nameInput').value,
                Email: document.getElementById('emailInput').value
            }
            const oldN = localStorage.getItem('nameOld');
            const oldU = localStorage.getItem('usernameOld');
            const oldE = localStorage.getItem('emailOld');

            if (formData.Name == oldN && formData.Username == oldU && formData.Email == oldE) {
                document.getElementById("updateMessage").style.color = "blue";
                document.getElementById("updateMessage").innerText = "No changes were made.";
                return;
            }
            const errorMessages = [];
            if (!isValidName(formData.Name)) {
                if (window.location.search.includes('culture=en')) {
                    errorMessages.push('*Name should be at least 3 symbols long!')
                } else {
                    errorMessages.push('*Vardas turi būti sudarytas bent iš 3 simbolių!')
                }
            }

            if (!isValidUsername(formData.Username)) {
                if (window.location.search.includes('culture=en')) {
                    errorMessages.push('*Username must be at least 4 symbols long!')
                } else {
                    errorMessages.push('*Slaptyvardis turi būti sudarytas bent iš 4 simbolių!')
                }
            }

            if (!isValidEmail(formData.Email)) {
                if (window.location.search.includes('culture=en')) {
                    errorMessages.push('*Email is invalid!')
                } else {
                    errorMessages.push('*Neteisingas elektroninis paštas!')
                }
            }

            if (errorMessages.length > 0) {
                document.getElementById("updateMessage").style.color = "red";
                const errorMessageElement = document.getElementById("updateMessage");
                errorMessageElement.innerText = errorMessages.join(', ');
                return;
            }
            else {
                localStorage.setItem('usernameOld', formData.Username);
                localStorage.setItem('nameOld', formData.Name);
                localStorage.setItem('emailOld', formData.Email);
                document.getElementById("updateMessage").style.color = "green";
                document.getElementById("updateMessage").innerText = "Changes were made successfully!";
                const response = await fetch('/UserProfile?handler=UpdateData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                const data = await response.json(); // Assuming the server returns JSON
            }

        });

        const profilePicture1 = document.querySelector('.profile-image1')
        const profilePicture2 = document.querySelector('.profile2')
        function getPicture(picture) {
            let url = picture.value;
            profilePicture1.src = url;
            profilePicture2.src = url;
            localStorage.setItem('selectedAvatar', url);
        }

        let sidebar = document.querySelector(".sidebar");
        let closeBtn = document.querySelector("#btn");
        let searchBtn = document.querySelector(".bx-search");
        let logoutBtn = document.querySelector("#log_out");
        logoutBtn.addEventListener("click", async () => {
            try {
                const response = await fetch('/api/accounts/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                if (response.ok) {
                    window.location.href = '/Index';
                } else {
                    console.error('Failed to logout:', response.statusText);
                }
            } catch (error) {
                console.error('Error during logout:', error);
            }
        });
        closeBtn.addEventListener("click", () => {
            sidebar.classList.toggle("open");
            menuBtnChange();
        });
        searchBtn.addEventListener("click", () => {
            sidebar.classList.toggle("open");
            menuBtnChange();
        });
        function menuBtnChange() {
            if (sidebar.classList.contains("open")) {
                closeBtn.classList.replace("bx-menu", "bx-menu-alt-right");
            } else {
                closeBtn.classList.replace("bx-menu-alt-right", "bx-menu");
            }
        }
    </script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</body>

</html>